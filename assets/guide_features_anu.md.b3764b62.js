import{_ as l,o as p,c,a as e,w as o,b as s,d as n,e as t,r as i}from"./app.d66e8c72.js";const w=JSON.parse('{"title":"Sizing","description":"","frontmatter":{},"headers":[],"relativePath":"guide/features/anu.md"}'),r={name:"guide/features/anu.md"},d=s("h1",{id:"sizing",tabindex:"-1"},[n("Sizing "),s("a",{class:"header-anchor",href:"#sizing","aria-hidden":"true"},"#")],-1),u=s("h2",{id:"scaling",tabindex:"-1"},[n("Scaling "),s("a",{class:"header-anchor",href:"#scaling","aria-hidden":"true"},"#")],-1),D=s("p",null,"When adjusting the size of the component, you want to reduce component's overall look including padding, height, width, etc along with font size.",-1),y=s("p",null,[n("Anu mostly uses "),s("code",null,"em"),n(" unit for applying padding, height, width, etc. You can leverage this to create custom size we want just using font size utilities.")],-1),F=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;</span><span style="color:#C792EA;">ABtn</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text-sm</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">variant</span><span style="color:#A6ACCD;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">outline</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    Button</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">ABtn</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="spacing" tabindex="-1">Spacing <a class="header-anchor" href="#spacing" aria-hidden="true">#</a></h2><p>Just like plain CSS or UnoCSS, Anu also provides flexibility with component sizing. You are not limited to sizes like <code>sm</code>, <code>lg</code> &amp; <code>xl</code>, with Anu you can create arbitrary sizes using <code>spacing</code> prop &amp; font size combination.</p><p>Assume you want to create a small button but <strong>don&#39;t want to reduce it&#39;s font size</strong> according to your design. In other frameworks you have to manually adjust the padding, height, width, etc to achieve this.</p>`,4),h=t(`<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;</span><span style="color:#C792EA;">ABtn</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">spacing</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">variant</span><span style="color:#A6ACCD;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">outline</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    spacing-80</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">ABtn</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Predefined Sizes</p><p>You can create your own predefined sizes like <code>size</code> prop in other frameworks using custom class &amp; shortcuts.</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ABtn</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">size-xl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Button</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">ABtn</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>Now, create a new shortcut for this <code>&#39;btn&#39;: &#39;[&amp;.size-xl]-p-8&#39;,</code>. You can also take it further with dynamic shortcuts and other UnoCSS features.</p></div>`,2);function C(g,A,_,m,f,v){const a=i("ABtn");return p(),c("div",null,[d,u,D,y,e(a,{class:"text-sm",variant:"outline"},{default:o(()=>[n("Button")]),_:1}),F,e(a,{spacing:80,variant:"outline"},{default:o(()=>[n("Button")]),_:1}),h])}const S=l(r,[["render",C]]);export{w as __pageData,S as default};
